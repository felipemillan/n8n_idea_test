{
  "name": "Scrape and store data from multiple website pages",
  "nodes": [
    {
      "parameters": {},
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        380,
        240
      ],
      "typeVersion": 1,
      "id": "d6837100-a133-4284-b33a-2de0c8d0af1d"
    },
    {
      "parameters": {
        "url": "https://www.theswiftcodes.com/browse-by-country/",
        "responseFormat": "string",
        "options": {}
      },
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        840,
        240
      ],
      "typeVersion": 1,
      "id": "38537ca7-0356-444d-a94d-00e574616675"
    },
    {
      "parameters": {
        "extractionValues": {
          "values": [
            {
              "key": "countries",
              "cssSelector": "ol > li > a",
              "returnValue": "attribute",
              "attribute": "href",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "name": "HTML Extract",
      "type": "n8n-nodes-base.htmlExtract",
      "position": [
        1030,
        240
      ],
      "typeVersion": 1,
      "id": "ed7a9b97-3a3b-4fd0-a2e9-2b414c655a7b"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {
          "reset": false
        }
      },
      "name": "SplitInBatches",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1430,
        240
      ],
      "typeVersion": 1,
      "id": "2515ddd8-ec81-4d03-8d45-14d643ec925e"
    },
    {
      "parameters": {
        "url": "={{$node[\"Set\"].json[\"url\"]}}",
        "responseFormat": "file",
        "options": {}
      },
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2770,
        160
      ],
      "typeVersion": 1,
      "id": "e78ef092-967e-4f49-94e4-62ffb75091a0"
    },
    {
      "parameters": {
        "sourceData": "binary",
        "extractionValues": {
          "values": [
            {
              "key": "next_button",
              "cssSelector": "span.next > a",
              "returnValue": "attribute",
              "attribute": "href"
            },
            {
              "key": "names",
              "cssSelector": "td.table-name",
              "returnArray": true
            },
            {
              "key": "swifts",
              "cssSelector": "td.table-swift",
              "returnArray": true
            },
            {
              "key": "cities",
              "cssSelector": "td.table-city",
              "returnArray": true
            },
            {
              "key": "branches",
              "cssSelector": "td.table-branch",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "name": "HTML Extract1",
      "type": "n8n-nodes-base.htmlExtract",
      "position": [
        3270,
        10
      ],
      "typeVersion": 1,
      "id": "24a9b461-2fa1-4711-967e-0fa845af7c1f"
    },
    {
      "parameters": {
        "operation": "insert",
        "collection": "swifts.meetup",
        "fields": "iso_code,country,page,name,branch,city,swift_code,createdAt,updatedAt",
        "options": {
          "dateFields": "createdAt,updatedAt"
        }
      },
      "name": "MongoDB1",
      "type": "n8n-nodes-base.mongoDb",
      "position": [
        3800,
        10
      ],
      "typeVersion": 1,
      "id": "4aa78204-398c-4563-9ea3-4819ea0e0ae9"
    },
    {
      "parameters": {
        "group": "geographic",
        "tool": "getCountryNormalized",
        "country": "={{$node[\"SplitInBatches\"].json[\"country\"].replace(/[\\/0-9]/g, \"\")}}",
        "additionalOptions": {}
      },
      "name": "uProc",
      "type": "n8n-nodes-base.uproc",
      "position": [
        1620,
        240
      ],
      "typeVersion": 1,
      "id": "1310e87b-dcd7-4540-9877-35bb84f732c6"
    },
    {
      "parameters": {
        "functionCode": "var newItems = [];\n\nfor (i = 0; i < items[0].json.swifts.length; i++) {\n  var item = {\n    iso_code: $node['uProc'].json.message.code,\n    country: $node['SplitInBatches'].json.country.replace(/[-\\/0-9]/g, \"\"),\n    page: $node['Set Page to Scrape'].json.page,\n    name: items[0].json.names[i],\n    city: items[0].json.cities[i],\n    branch: items[0].json.branches[i],\n    swift_code: items[0].json.swifts[i],\n    createdAt: new Date(),\n    updatedAt: new Date()\n  }\n  newItems.push({json: item});\n}\n\nreturn newItems;\n\n"
      },
      "name": "Prepare Documents",
      "type": "n8n-nodes-base.function",
      "position": [
        3450,
        10
      ],
      "typeVersion": 1,
      "id": "03bcd538-aa85-4520-9db0-1a305f1d1edc"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"SplitInBatches\"].context[\"noItemsLeft\"] + \"\"}}",
              "value2": "true"
            }
          ]
        }
      },
      "name": "More Countries",
      "type": "n8n-nodes-base.if",
      "position": [
        3330,
        520
      ],
      "typeVersion": 1,
      "id": "99c2b4b5-8e3e-476e-954a-dd893f21847a"
    },
    {
      "parameters": {
        "functionCode": "const staticData = getWorkflowStaticData('global');\n\nitem.page = \"\";\nif (staticData.page && staticData.page.length) {\n  item.page = staticData.page;\n} else {\n  item.page = $node['SplitInBatches'].json.country;\n}\nreturn item;\n"
      },
      "name": "Set Page to Scrape",
      "type": "n8n-nodes-base.functionItem",
      "position": [
        1810,
        100
      ],
      "typeVersion": 1,
      "id": "3133f905-d72c-43ef-b32a-833f861e1bed"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"more_pages\"] + \"\"}}",
              "value2": "true"
            }
          ]
        }
      },
      "name": "More Pages",
      "type": "n8n-nodes-base.if",
      "position": [
        3590,
        440
      ],
      "typeVersion": 1,
      "id": "8d27e447-268e-4120-bc4a-89bc48054df8"
    },
    {
      "parameters": {
        "functionCode": "var next_page = $node['HTML Extract1'].json.next_button && $node['HTML Extract1'].json.next_button.length ? $node['HTML Extract1'].json.next_button : \"\";\nvar more_pages = next_page.length > 0;\nconst staticData = getWorkflowStaticData('global');\n\n//all current items are after date: needs pagination\nif (more_pages) {\n  staticData.page = next_page;\n} else {\n  //don't check more items in previous pages;\n  delete staticData.page;\n}\n\nreturn [\n  {\n    json: {\n      more_pages: more_pages\n    }\n  }\n];\n"
      },
      "name": "Set More Pages",
      "type": "n8n-nodes-base.function",
      "position": [
        3990,
        10
      ],
      "typeVersion": 1,
      "id": "76f5cdac-be63-4d46-b1e2-aa8179aa98ee"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "url",
              "value": "=https://www.theswiftcodes.com{{$node[\"Set Page to Scrape\"].json[\"page\"]}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "position": [
        1960,
        100
      ],
      "typeVersion": 1,
      "id": "f5e9b513-8cbc-468f-ba0c-5e70489a8a79"
    },
    {
      "parameters": {
        "functionCode": "var generateNameFromUrl = function(url){\n    return url.replace(/[^a-z0-9]/gi, \"_\");\n}\n\nitem.file = generateNameFromUrl(item.url) + \".html\"\nreturn item;"
      },
      "name": "Generate filename",
      "type": "n8n-nodes-base.functionItem",
      "position": [
        2120,
        30
      ],
      "typeVersion": 1,
      "id": "3b72b8fb-ca6e-431b-aa5b-71d2ad2ee4f9"
    },
    {
      "parameters": {
        "filePath": "=/home/node/.cache/scrapper/{{$json[\"file\"]}}"
      },
      "name": "Read Binary File",
      "type": "n8n-nodes-base.readBinaryFile",
      "position": [
        2290,
        30
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "id": "c1bcb6fc-61b0-4f12-a7f8-6e98974fba6d",
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"Read Binary File\"].binary.data.mimeType}}",
              "value2": "text/html"
            }
          ]
        }
      },
      "name": "File exists?",
      "type": "n8n-nodes-base.if",
      "position": [
        2470,
        30
      ],
      "typeVersion": 1,
      "id": "8ccc53c3-9d7d-4b70-afb6-028a6374b6df"
    },
    {
      "parameters": {
        "fileName": "=/home/node/.cache/scrapper/{{$node[\"Generate filename\"].json[\"file\"]}}",
        "dataPropertyName": "=data",
        "options": {}
      },
      "name": "Write Binary File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "position": [
        2920,
        160
      ],
      "typeVersion": 1,
      "id": "bf11d098-a325-4fee-9d0b-ce6e0cd26441"
    },
    {
      "parameters": {
        "filePath": "=/home/node/.cache/scrapper/{{$json[\"file\"]}}"
      },
      "name": "Read Binary File1",
      "type": "n8n-nodes-base.readBinaryFile",
      "position": [
        3090,
        10
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "id": "25a93282-3fc3-4590-b1c5-e90ed0ca6853",
      "continueOnFail": true
    },
    {
      "parameters": {
        "functionCode": "const waitTimeSeconds = 1;\n\nreturn new Promise((resolve) => {\n  setTimeout(() => {\n    resolve([]);\n  }, waitTimeSeconds * 1000);\n});\n"
      },
      "name": "Wait",
      "type": "n8n-nodes-base.function",
      "position": [
        2610,
        160
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "id": "fe8ba28c-04e5-4685-9cf5-c75e39690c33",
      "continueOnFail": true
    },
    {
      "parameters": {
        "functionCode": "return items[0].json.countries.map(function(country) {\n  return {\n  json: {country: country}\n  }\n});"
      },
      "name": "Prepare countries",
      "type": "n8n-nodes-base.function",
      "position": [
        1220,
        240
      ],
      "typeVersion": 1,
      "id": "5ea4331d-271c-4432-a75b-7019e21222c8"
    },
    {
      "parameters": {
        "command": "mkdir -p  /home/node/.cache/scrapper/"
      },
      "name": "Create Directory",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        590,
        240
      ],
      "typeVersion": 1,
      "id": "12a1d3e7-23b5-4713-bb9f-ca738158518c",
      "continueOnFail": true
    },
    {
      "parameters": {
        "collection": "swifts.meetup",
        "options": {},
        "query": "={\"swift_code\": \"{{$json[\"swift_code\"]}}\"}"
      },
      "name": "MongoDB",
      "type": "n8n-nodes-base.mongoDb",
      "position": [
        3620,
        -60
      ],
      "executeOnce": false,
      "typeVersion": 1,
      "alwaysOutputData": true,
      "id": "3d593827-ad9d-4b4b-bb9b-5d8abd682d29",
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "Set": {
      "main": [
        [
          {
            "node": "Generate filename",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "uProc": {
      "main": [
        [
          {
            "node": "Set Page to Scrape",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB1": {
      "main": [
        [
          {
            "node": "Set More Pages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "More Pages": {
      "main": [
        [
          {
            "node": "Set Page to Scrape",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "More Countries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File exists?": {
      "main": [
        [
          {
            "node": "Read Binary File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML Extract": {
      "main": [
        [
          {
            "node": "Prepare countries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTML Extract",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML Extract1": {
      "main": [
        [
          {
            "node": "Prepare Documents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Write Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "More Countries": {
      "main": [
        [],
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set More Pages": {
      "main": [
        [
          {
            "node": "More Pages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitInBatches": {
      "main": [
        [
          {
            "node": "uProc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Directory": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Binary File": {
      "main": [
        [
          {
            "node": "File exists?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate filename": {
      "main": [
        [
          {
            "node": "Read Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Documents": {
      "main": [
        [
          {
            "node": "MongoDB1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare countries": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Binary File1": {
      "main": [
        [
          {
            "node": "HTML Extract1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Binary File": {
      "main": [
        [
          {
            "node": "Read Binary File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Page to Scrape": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Create Directory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "",
  "meta": {
    "instanceId": "307382b38c67d1530ca68d83854638962fd3a0593e5ffc691843a9cd148ba469"
  },
  "tags": []
}